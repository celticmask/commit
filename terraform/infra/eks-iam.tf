# Grant access via an IAM role to the load balancer
module "lb_role" {
  source                                 = "terraform-aws-modules/iam/aws//modules/iam-role-for-service-accounts-eks"
  role_name                              = "${var.name_prefix}-eks-lb"
  attach_load_balancer_controller_policy = true
  oidc_providers = {
    main = {
      provider_arn               = module.eks.oidc_provider_arn
      namespace_service_accounts = ["kube-system:nginx"]
    }
  }
}

# Fluentd logging role for Service Account
data "aws_iam_policy_document" "logger_doc" {
  version = "2012-10-17"
  statement {
    sid    = "logs"
    effect = "Allow"
    actions = [
      "logs:CreateLogStream",
      "logs:CreateLogGroup",
      "logs:PutLogEvents",
      "logs:DescribeLogGroups",
      "logs:PutRetentionPolicy",
      "logs:DescribeLogStreams"
    ]
    resources = ["arn:aws:logs:*:*:*"]
  }
}

# Create logging policy
resource "aws_iam_policy" "logger_pol" {
  name_prefix = "EKSNodeGroupAutoScalerPolicy"
  description = "Generated by Terraform for K8S cluster"
  policy      = data.aws_iam_policy_document.logger_doc.json
}

# Cloudwatch Logger Policy Document
data "aws_iam_policy_document" "cloudwatch_logger" {
  version = "2012-10-17"
  statement {
    sid     = "cloudwatch"
    effect  = "Allow"
    actions = ["sts:AssumeRole"]
    principals {
      type        = "Service"
      identifiers = [format("logs.%s.amazonaws.com", var.aws_region)]
    }
  }
}

# Attach the policy(lgger_pol) to the EKS worker IAM role.
resource "aws_iam_role_policy_attachment" "node_group_logging_attach" {
  role       = module.eks.eks_managed_node_groups["nodes"].iam_role_name
  policy_arn = aws_iam_policy.logger_pol.arn
}
